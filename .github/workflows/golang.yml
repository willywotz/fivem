name: golang

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: restore go modules
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            ~\AppData\Local\go-build
            ~\go\pkg\mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Install WebView2 Runtime
        run: |
          Start-Process .\scripts\MicrosoftEdgeWebview2Setup.exe -ArgumentList "/silent","/install" -Wait
        shell: pwsh

      - name: Install MinGW-w64
        run: choco install mingw -y
        shell: pwsh

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: false

      - name: build go binary
        run: |
          go run github.com/josephspurrier/goversioninfo/cmd/goversioninfo@53cb51b8aa6b6b62ab8196e66a766ea7598c67fa -64 -file-version '${{ github.ref_name }}' -product-version '${{ github.ref_name }}'
          go build -ldflags="-s -w -H windowsgui -X 'main.buildVersion=${{ github.ref_name }}'" -o fivem-windows-amd64.exe .

      - name: upload to action artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          path: fivem-windows-amd64.exe

      - name: create github release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: fivem-windows-amd64.exe
          draft: false
          prerelease: false
